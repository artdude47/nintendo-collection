// <auto-generated />
using System;
using Collection.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Collection.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251013231124_MoneyAsReal")]
    partial class MoneyAsReal
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("Collection.Domain.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Condition")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<double?>("EstimatedValue")
                        .HasColumnType("REAL");

                    b.Property<bool>("HasBox")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("HasManual")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Notes")
                        .HasColumnType("TEXT");

                    b.Property<int>("PlatformId")
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly?>("PurchaseDate")
                        .HasColumnType("TEXT");

                    b.Property<double?>("PurchasePrice")
                        .HasColumnType("REAL");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PlatformId");

                    b.HasIndex("UserId", "PlatformId", "Title");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("Collection.Domain.Platform", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Platforms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Manufacturer = "Nintendo",
                            Name = "NES"
                        },
                        new
                        {
                            Id = 2,
                            Manufacturer = "Nintendo",
                            Name = "SNES"
                        },
                        new
                        {
                            Id = 3,
                            Manufacturer = "Nintendo",
                            Name = "N64"
                        },
                        new
                        {
                            Id = 4,
                            Manufacturer = "Nintendo",
                            Name = "GameCube"
                        },
                        new
                        {
                            Id = 5,
                            Manufacturer = "Nintendo",
                            Name = "Wii"
                        },
                        new
                        {
                            Id = 6,
                            Manufacturer = "Nintendo",
                            Name = "Wii U"
                        },
                        new
                        {
                            Id = 7,
                            Manufacturer = "Nintendo",
                            Name = "Switch"
                        },
                        new
                        {
                            Id = 8,
                            Manufacturer = "Nintendo",
                            Name = "Game Boy"
                        },
                        new
                        {
                            Id = 9,
                            Manufacturer = "Nintendo",
                            Name = "Game Boy Color"
                        },
                        new
                        {
                            Id = 10,
                            Manufacturer = "Nintendo",
                            Name = "Game Boy Advance"
                        },
                        new
                        {
                            Id = 11,
                            Manufacturer = "Nintendo",
                            Name = "Nintendo DS"
                        },
                        new
                        {
                            Id = 12,
                            Manufacturer = "Nintendo",
                            Name = "Nintendo 3DS"
                        },
                        new
                        {
                            Id = 13,
                            Manufacturer = "Nintendo",
                            Name = "Amiibo"
                        });
                });

            modelBuilder.Entity("Collection.Domain.Item", b =>
                {
                    b.HasOne("Collection.Domain.Platform", "Platform")
                        .WithMany()
                        .HasForeignKey("PlatformId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Platform");
                });
#pragma warning restore 612, 618
        }
    }
}
